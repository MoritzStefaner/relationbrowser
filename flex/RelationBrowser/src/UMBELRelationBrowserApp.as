package {	import eu.stefaner.relationbrowser.RelationBrowser;	import eu.stefaner.relationbrowser.RelationBrowserApp;	import eu.stefaner.relationbrowser.data.NodeData;	import eu.stefaner.relationbrowser.ui.Node;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.utils.Dictionary;	public class UMBELRelationBrowserApp extends RelationBrowserApp {		public var loadingQueue:Array=[];		private var alreadyLoaded:Dictionary = new Dictionary();		//--------------------------------------		// CONSTRUCTOR		//--------------------------------------		/**		 *@Constructor		 */		public function UMBELRelationBrowserApp() {			super();			init();		}		public function init():void {			relationBrowser = new RelationBrowser();			addChild(relationBrowser);			relationBrowser.addEventListener(RelationBrowser.NODE_SELECTION_FINISHED, onNodeSelected);			loadDetailsForNode(null);		}		private function loadDetailsForNode(id:String):void {			if (id==null) {				id='ArchitecturalDesign';			}			if (alreadyLoaded[id]) {				return;			}			var s:String="http://umbel.zitgist.com/explorer/explorer.php?concept="+id;			trace("loading... " + id);			alreadyLoaded[id]=true;			var loader:URLLoader = new URLLoader();			loader.load(new URLRequest(s));			loader.addEventListener(Event.COMPLETE, onNodesLoaded);		}		private function onNodesLoaded(e:Event):void {			var xml:XML=new XML(e.target.data);			for each (var node:XML in xml.Nodes.Node) {				trace("Node " + node.@id);				var o:Object={};				o.id=node.@id.toString();				o.name=node.@name.toString();				relationBrowser.addNode(new NodeData(o.id, o));				//relationBrowser.addNodeForObject(o.id, o);			}			for each (var edge:XML in xml.Relations.children()) {				trace("Edge " + edge);				relationBrowser.addEdge(edge.@fromID.toString(), edge.@toID.toString());			}			relationBrowser.updateDisplay();		}		override protected function onNodeSelected(e:Event):void {			var n:Node=e.target.selectedNode;			if (n) {				trace("onNodeSelected " + n);				loadDetailsForNode(n.data.id);			}		}	}}